{"version":3,"sources":["hooks/useMetaMaskEncryption.ts","styles/font.ts","styles/theme.ts","context/AppContext.ts","hooks/useContacts.ts","components/ErrorNotifications.tsx","web3/injector-connector.ts","components/Buttons.tsx","components/layout/PageContainer.tsx","components/LoadingPanel.tsx","pages/WelcomePage.tsx","components/StyledTextField.tsx","hooks/useWeb3Loader.ts","pages/TestPage.tsx","components/layout/PageHeader.tsx","components/StyledAvatar.tsx","hooks/useInitials.ts","components/ContactsList.tsx","pages/Contacts/AddressBookPage.tsx","components/ContactForm.tsx","pages/Contacts/ContactAddPage.tsx","pages/Contacts/ContactEditPage.tsx","pages/Contacts/ContactSendValuePage.tsx","hooks/useWeb3SendEth.ts","pages/Router.tsx","App.tsx","index.tsx"],"names":["_encrypt","text","publicKey","Buffer","from","JSON","stringify","ethEncrypt","data","toString","useMetaMaskEncryption","useWeb3React","account","library","useState","encryptionPublicKey","setEncryptionPublicKey","useEffect","ethereum","useMemo","givenProvider","requestMetaMaskPublicKey","useCallback","a","sessionStoragePk","sessionStorage","getItem","Error","toast","success","toastId","request","method","params","then","key","setItem","dismiss","encrypt","decrypt","autoClose","res","fontMayaSamuelsExtraLight","fontFamily","fontStyle","fontDisplay","fontWeight","src","process","fontMayaSamuelsLight","colorPalette","orange","main","darkBlue","blue","blueGrey","darkGrey","lightGrey","themeDefault","palette","primary","secondary","typography","join","overrides","MuiCssBaseline","themes","dark","createTheme","type","light","background","default","common","white","AppContext","createContext","theme","setTheme","contactsModule","contactsList","addContact","contact","deleteContact","editContact","index","newContact","useRouterContactLoader","id","useParams","useContext","Number","isNaN","undefined","ErrorNotifications","error","NoEthereumProviderError","message","injectedConnector","InjectedConnector","supportedChainIds","PrimaryButton","withStyles","root","marginTop","spacing","width","color","borderRadius","textTransform","props","Button","variant","SecondaryButton","TextButton","PageContainer","paddingTop","display","flexDirection","alignItems","maxWidth","breakpoints","values","sm","children","other","Fade","in","Container","useStyles","makeStyles","container","threeDots","messageContainer","LoadingPanel","isLoading","classes","setThreeDots","dotLength","interval","setInterval","substr","clearInterval","className","CircularProgress","Typography","justifyContent","minHeight","logo","WelcomePage","history","useHistory","activate","active","setLoading","redirectOnSuccess","setRedirectOnSuccess","push","routePaths","contacts","list","alt","align","onClick","finally","StyledTextField","backgroundColor","borderStyle","TextField","useWeb3Loader","autoConnect","to","welcome","setIsLoading","button","TestPage","setText","accountAddress","onChange","e","target","value","multiline","minRows","result","disabled","fullWidth","backButton","title","textAlign","rightSizeContainer","minWidth","PageHeader","onBack","rightSide","clsx","IconButton","size","fontSize","StyledAvatar","Avatar","useInitials","name","cleanedWords","split","filter","w","trim","length","slice","toUpperCase","firstName","lastName","listItem","paddingLeft","paddingRight","avatar","height","iconButton","padding","ListItemContact","initials","ListItem","send","ListItemAvatar","ListItemText","ListItemAddContact","new","ContactsList","List","map","i","AddressBookPage","deactivate","textField","ContactForm","setErr","onSubmit","web3","ethAddressError","setEthAddressError","nameInputError","setNameInputError","validateEthAddressInput","utils","isAddress","handleEthAddressInput","ethAddress","validateNameInput","handleNameInput","placeholder","helperText","required","every","v","ContactAddPage","setContact","err","goBack","ContactEditPage","originalContact","handleBack","edit","wordWrap","textInput","transactionFee","ContactSendValuePage","sendAmount","setSendAmount","amount","gasPrice","setCacheGasPrice","transactionFeeEst","setTransactionFeeEst","isLoaded","eth","getGasPrice","price","console","log","estimateGas","gasLimit","fromWei","sendTransaction","toWei","transactionFeeEstimate","useWeb3SendEth","usdValue","parseFloat","toFixed","toLowerCase","InputProps","endAdornment","InputAdornment","position","test","AppRouter","exact","path","AppContextThemeProvider","Consumer","ThemeProvider","App","useReducer","_","setContactsList","encryptedStr","localStorage","jsonStr","parse","saveContacts","encryptedTxt","removeItem","prev","copy","findIndex","c","splice","useContacts","Provider","CssBaseline","ReactDOM","render","getLibrary","provider","connector","Web3","document","getElementById"],"mappings":"2OAYMA,EAAW,SAACC,EAAcC,GAC9B,OAAOC,EAAOC,KACZC,KAAKC,UACHC,kBAAWL,EAAW,CAAEM,KAAMP,GAAQ,8BAExCQ,SAAS,QAOAC,EAAwB,WAAO,IAAD,EACZC,cAArBC,EADiC,EACjCA,QAASC,EADwB,EACxBA,QADwB,EAGaC,mBACpD,MAJuC,mBAGlCC,EAHkC,KAGbC,EAHa,KAOzCC,qBAAU,WACRD,EAAuB,MACtB,CAACJ,IAEJ,IAAMM,EAAWC,mBAAQ,WACvB,GAAKN,EACL,OAAOA,EAAQO,gBACd,CAACP,IAEEQ,EAA2BC,sBAAW,sBAAC,4BAAAC,EAAA,0DACvCR,EADuC,yCACXA,GADW,YAErCS,EAAmBC,eAAeC,QAAf,aAA6Bd,KAFX,yCAGdY,GAHc,UAItCN,EAJsC,sBAItBS,MAAM,8BAJgB,cAK3CC,IAAMC,QAAQ,6CAA8C,CAC1DC,QAAS,oBANgC,kBAQpCZ,EACJa,QAAQ,CACPC,OAAQ,6BACRC,OAAQ,CAACrB,KAEVsB,MAAK,SAACC,GAIL,OAHAnB,EAAuBmB,GACvBV,eAAeW,QAAf,aAA6BxB,GAAWuB,GACxCP,IAAMS,QAAQ,mBACPF,MAjBgC,2CAmB1C,CAACpB,EAAqBG,EAAUN,IAkCnC,MAAO,CACL0B,QAjCchB,sBAAW,uCACzB,WAAOrB,GAAP,SAAAsB,EAAA,yDACOR,EADP,yCAEWM,IAA2Ba,MAAK,SAAChC,GACtC,OAAOF,EAASC,EAAMC,OAH5B,gCAMSF,EAASC,EAAMc,IANxB,2CADyB,sDASzB,CAACM,EAA0BN,IAyB3BwB,QAtBcjB,uBACd,SAACrB,GACC,IAAKiB,EAAU,MAAMS,MAAM,8BAK3B,OAJAC,IAAMC,QAAQ,6CAA8C,CAC1DC,QAAS,kBACTU,WAAW,IAENtB,EACJa,QAAQ,CACPC,OAAQ,cACRC,OAAQ,CAAChC,EAAMW,KAEhBsB,MAAK,SAACO,GAEL,OADAb,IAAMS,QAAQ,mBACPI,OAGb,CAAC7B,EAASM,IAMVH,sBACAM,+B,0ZCjGSqB,EAA4B,CACvCC,WAAY,wBACZC,UAAW,SACXC,YAAa,OACbC,WAAY,IACZC,IAAI,oDAAD,OAEMC,iBAFN,gEAMQC,EAAuB,CAClCN,WAAY,mBACZC,UAAW,SACXC,YAAa,OACbC,WAAY,IACZC,IAAI,+CAAD,OAEMC,iBAFN,2DCZQE,EAAe,CAC1BC,OAAO,2BACFA,KADC,IAEJC,KAAM,YAERC,SAAS,2BACJC,KADG,IAENF,KAAM,YAERG,SAAS,2BACJA,KADG,IAENH,KAAM,YAERI,SAAU,CACRJ,KAAM,WAERK,UAAW,CACTL,KAAM,YAIJM,EAA6B,CACjCC,QAAS,CACPC,QAASV,EAAaC,OACtBU,UAAWX,EAAaG,SACxBpD,KAAM,CACJ2D,QAASV,EAAaM,SAASJ,OAGnCU,WAAY,CACVnB,WAAY,CACV,mBACA,gBACA,SACA,mBACA,QACA,cACAoB,KAAK,MAETC,UAAW,CACTC,eAAgB,CACd,UAAW,CACT,aAAc,CACZvB,EACAO,OAOGiB,EAAS,CACpBC,KAAMC,YAAY,2BACbV,GADY,IAEfC,QAAQ,2BACHD,EAAaC,SADX,IAELU,KAAM,YAGVC,MAAOF,YAAY,2BACdV,GADa,IAEhBC,QAAQ,2BACHD,EAAaC,SADX,IAELU,KAAM,QACNE,WAAY,CACVC,QAASC,IAAOC,a,mCClDTC,EAXIC,wBAAc,CAC/BC,MAAOX,EAAOI,MACdQ,SAAU,SAACT,KACXU,eAAgB,CACdC,aAAc,GACdC,WAAY,SAACC,KACbC,cAAe,SAACD,KAChBE,YAAa,SAACC,EAAeC,Q,iBCTpBC,EAAyB,WAAO,IACnCC,EAAOC,cAAPD,GACAT,EAAmBW,qBAAWf,GAA9BI,eAFkC,EAIjB5D,mBAAQ,WAC/B,IAAMkE,EAAQM,OAAOH,GACrB,OAAII,MAAMP,GACD,MAACQ,OAAWA,GAEd,CAACd,EAAeC,aAAaK,GAAQA,KAC3C,CAACN,EAAeC,aAAcQ,IAVS,mBAY1C,MAAO,CACLN,QAbwC,KAcxCG,MAdwC,O,SCsB7BS,EAtBsB,WAAO,IAClCC,EAAUpF,cAAVoF,MAkBR,OAhBA9E,qBAAU,WACH8E,IAEDA,aAAiBC,IACnBpE,IAAMmE,MACJ,iGACA,CACEjE,QAAQ,4BACRU,WAAW,IAIfZ,IAAMmE,MAAMA,EAAME,YAEnB,CAACF,IAEG,M,2BCVIG,EAAoB,IAAIC,IAAkB,CACrDC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,M,uBCbrBC,EAAgBC,aAAW,SAACzB,GAAD,MAAY,CAClD0B,KAAM,CACJC,UAAW3B,EAAM4B,QAAQ,GACzBC,MAAO,OACPC,MAAO9B,EAAMlB,QAAQc,OAAOC,MAC5BkC,aAAc,GACdC,cAAe,WANUP,EAQzB,SAACQ,GAAD,OACF,cAACC,EAAA,EAAD,aAAQC,QAAS,YAAaL,MAAO,WAAeG,OAGzCG,EAAkBX,aAAW,SAACzB,GAAD,MAAY,CACpD0B,KAAM,CACJC,UAAW3B,EAAM4B,QAAQ,GACzBC,MAAO,OACPC,MAAO9B,EAAMlB,QAAQc,OAAOC,MAC5BkC,aAAc,GACdC,cAAe,WANYP,EAQ3B,SAACQ,GAAD,OACF,cAACC,EAAA,EAAD,aAAQC,QAAS,YAAaL,MAAO,aAAiBG,OAG3CI,EAAaZ,aAAW,SAACzB,GAAD,MAAY,CAC/C0B,KAAM,CACJM,cAAe,WAFOP,EAItB,SAACQ,GAAD,OAAwB,cAACC,EAAA,EAAD,aAAQC,QAAS,QAAYF,O,2BCV1CK,EATOb,aAAW,SAACzB,GAAD,MAAY,CAC3C0B,KAAM,CACJa,WAAYvC,EAAM4B,QAAQ,GAC1BY,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,SAAU3C,EAAM4C,YAAYC,OAAOC,OANjBrB,EATyB,SAACQ,GAAW,IACjDc,EAAuBd,EAAvBc,SAAaC,EADmC,YACzBf,EADyB,cAExD,OACE,cAACgB,EAAA,EAAD,CAAMC,IAAE,EAAR,SACE,cAACC,EAAA,EAAD,2BAAeH,GAAf,aAAuBD,U,SCJvBK,EAAYC,aAAW,SAACrD,GAAD,MAAY,CACvCsD,UAAW,CACTd,QAAS,OACTC,cAAe,SACfC,WAAY,SACZf,UAAW3B,EAAM4B,QAAQ,IAE3BR,QAAS,CACPO,UAAW3B,EAAM4B,QAAQ,IAE3B2B,UAAW,CACT1B,MAAO,GACPW,QAAS,UAEXgB,iBAAkB,CAChBhB,QAAS,OACTC,cAAe,MACfC,WAAY,gBA8DDe,EArDmC,SAAC,GAI5C,IAHLV,EAGI,EAHJA,SACAW,EAEI,EAFJA,UACAtC,EACI,EADJA,QAEMuC,EAAUP,IADZ,EAG8BnH,mBAAS,IAHvC,mBAGGsH,EAHH,KAGcK,EAHd,KA6BJ,OAvBAxH,qBAAU,WACR,GAAKsH,EAAL,CAKA,IAAIG,EAAY,EAUVC,EAAWC,aATH,WACZ,GAAkB,IAAdF,EAGF,OAFAD,EAAa,SACbC,EAAY,GAIdD,EAAa,MAAMI,OAAO,EAD1BH,GAAa,MAGqB,KACpC,OAAO,WACLI,cAAcH,GACdF,EAAa,KAjBbA,EAAa,MAmBd,CAACF,IAECA,EAKH,sBAAKQ,UAAWP,EAAQL,UAAxB,UACE,cAACa,EAAA,EAAD,IACA,sBAAKD,UAAWP,EAAQH,iBAAxB,UACE,qBAAKU,UAAWP,EAAQJ,YACxB,cAACa,EAAA,EAAD,CAAYjC,QAAS,QAAS+B,UAAWP,EAAQvC,QAAjD,SACGA,GAAoB,YAEvB,cAACgD,EAAA,EAAD,CAAYjC,QAAS,QAAS+B,UAAWP,EAAQJ,UAAjD,SACGA,UAZA,mCAAGR,KCpDRK,EAAYC,aAAW,SAACrD,GAAD,MAAY,CACvCsD,UAAW,CACTd,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ2B,eAAgB,SAChBC,UAAW,QAEblJ,KAAM,CACJuG,UAAW3B,EAAM4B,QAAQ,IAE3B2C,KAAM,CACJ1C,MAAO,WAkDI2C,EA9Ce,WAC5B,IAAMb,EAAUP,IAEVqB,EAAUC,cAHkB,EAIL5I,cAArB6I,EAJ0B,EAI1BA,SAAUC,EAJgB,EAIhBA,OAJgB,EAMF3I,oBAAS,GANP,mBAM3ByH,EAN2B,KAMhBmB,EANgB,OAOgB5I,oBAAS,GAPzB,mBAO3B6I,EAP2B,KAORC,EAPQ,KASlC3I,qBAAU,WACJwI,GAAUE,GACZL,EAAQO,KAAKC,GAAWC,SAASC,QAElC,CAACV,EAASG,EAAQE,IAYrB,OACE,eAAC,EAAD,CAAeZ,UAAWP,EAAQL,UAAlC,UACE,qBACEpF,IAAKC,yCACLiH,IAAK,OACLlB,UAAWP,EAAQY,OAErB,cAACH,EAAA,EAAD,CAAYiB,MAAM,SAASlD,QAAS,KAApC,iCAGA,cAACiC,EAAA,EAAD,CAAYiB,MAAM,SAASlD,QAAS,QAAS+B,UAAWP,EAAQvI,KAAhE,yGAIA,cAAC,EAAD,CAAcsI,UAAWA,EAAWtC,QAAS,uBAA7C,SACE,cAACI,EAAD,CAAe8D,QAzBD,WACdV,EACFH,EAAQO,KAAKC,GAAWC,SAASC,OAGnCN,GAAW,GACXE,GAAqB,GACrBJ,EAAStD,GAAmBkE,SAAQ,kBAAMV,GAAW,QAkBjD,kC,SChEKW,EAAkB/D,YAAW,CACxCC,KAAM,CACJ,2BAA4B,CAC1B+D,gBAAiBpH,EAAaO,UAAUL,KACxCwD,aAAc,GACd,aAAc,CACZA,aAAc,GACd2D,YAAa,WAGjB7D,MAAO,SAVoBJ,EAY5B,SAACQ,GAAD,OAA2B,cAAC0D,EAAA,EAAD,aAAWxD,QAAS,YAAgBF,OCNrD2D,EAAgB,WAGvB,IAFJC,EAEG,wDADHC,EACG,uDADEb,GAAWc,QACb,EAC0BjK,cAArB8I,EADL,EACKA,OAAQD,EADb,EACaA,SADb,EAE+B1I,oBAAS,GAFxC,mBAEIyH,EAFJ,KAEesC,EAFf,KAGGvB,EAAUC,cAgBhB,OAdAtI,qBAAU,WACHwI,EASHoB,GAAa,GARTH,EACFlB,EAAStD,GAAmBhE,MAAK,WAC/B2I,GAAa,MAGfvB,EAAQO,KAAKc,KAKhB,CAAClB,EAAQkB,EAAID,EAAalB,EAAUF,IAEhC,CACLf,cCrBEN,EAAYC,aAAW,SAACrD,GAAD,MAAY,CACvCiG,OAAQ,CACNtE,UAAW3B,EAAM4B,QAAQ,QAqEdsE,EAjEY,WACzB,IAAMvC,EAAUP,IADe,EAEFtH,cAArBC,EAFuB,EAEvBA,QAFuB,KAEdC,QAEOC,mBAAS,KAJF,mBAIxBb,EAJwB,KAIlB+K,EAJkB,KAMzBC,EAAiB9J,mBAAQ,WAC7B,OAAKP,GAAgB,iCAGpB,CAACA,IAEI2H,EAAckC,GAAc,GAA5BlC,UAZuB,EAkB3B7H,cAJF4B,EAd6B,EAc7BA,QACAC,EAf6B,EAe7BA,QACAxB,EAhB6B,EAgB7BA,oBACAM,EAjB6B,EAiB7BA,yBAgBF,OACE,eAAC,EAAD,WACE,cAAC4H,EAAA,EAAD,CAAYjC,QAAS,KAArB,uBACA,eAAC,EAAD,CAAcuB,UAAWA,EAAzB,UACE,cAACU,EAAA,EAAD,CAAYjC,QAAS,UAArB,SAAiCiE,IACjC,cAAClE,EAAA,EAAD,CAAQoD,QAlBK,aAkBb,kBACA,cAACE,EAAD,CACEa,SAAU,SAACC,GAAD,OAAOH,EAAQG,EAAEC,OAAOC,QAClCA,MAAOpL,EACPqL,WAAS,EACTC,QAAS,IAEX,cAAClF,EAAD,CAAe8D,QArBC,WACfpJ,GACLuB,EAAQrC,GAAMiC,MAAK,SAACsJ,GAAD,OAAYR,EAAQQ,OAmBIC,UAAW1K,EAAlD,qBAGA,cAACkG,EAAD,CAAiBkD,QAnBD,WACpB5H,EAAQtC,GAAMiC,MAAK,SAACsJ,GAAD,OAAYR,EAAQQ,OAkBnC,qBACA,cAACvE,EAAD,CAAiBkD,QAAS9I,EAA1B,yBAGA,cAAC0F,EAAA,EAAD,CACEgC,UAAWP,EAAQsC,OACnBnE,MAAO,UACP+E,WAAS,EACT1E,QAAS,YAJX,kC,sCChEFiB,GAAYC,aAAW,iBAAO,CAClCC,UAAW,CACTd,QAAS,OACTC,cAAe,MACfC,WAAY,SACZ2B,eAAgB,gBAChBxC,MAAO,QAETiF,WAAY,GACZC,MAAO,CACLC,UAAW,UAEbC,mBAAoB,CAClBC,SAAU,QAWDC,GAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,OACAL,EAGI,EAHJA,MACAM,EAEI,EAFJA,UACAnD,EACI,EADJA,UAEMP,EAAUP,KAChB,OACE,sBAAKc,UAAWoD,aAAK3D,EAAQL,UAAWY,GAAxC,UACE,cAACqD,EAAA,EAAD,CACEC,KAAM,SACNlC,QAAS8B,EACTlD,UAAWP,EAAQmD,WAHrB,SAKE,cAAC,KAAD,CAAkBW,SAAS,cAE7B,cAACrD,EAAA,EAAD,CAAYjC,QAAS,YAAa+B,UAAWP,EAAQoD,MAArD,SACGA,IAEH,qBAAK7C,UAAWP,EAAQsD,mBAAxB,SAA6CI,Q,uECtCpCK,GAPajG,aAAW,SAACzB,GAAD,MAAY,CACjD0B,KAAM,CACJ+D,gBAAiBpH,EAAaK,SAASH,KACvCuD,MAAO9B,EAAMlB,QAAQc,OAAOC,UAHJ4B,CAKxBkG,MCNSC,GAAc,SAACC,GAC1B,OAAOvL,mBAAQ,WACb,IACMwL,EADQD,EAAKE,MAAM,KACEC,QAAO,SAACC,GAAD,OAAOA,EAAEC,OAAOC,UAElD,GAA4B,IAAxBL,EAAaK,OACf,MAAO,IAGT,GAA4B,IAAxBL,EAAaK,OACf,OAAOL,EAAa,GAAGM,MAAM,EAAG,GAAGC,cATlB,kBAYWP,EAZX,GAYZQ,EAZY,KAYDC,EAZC,KAcnB,OACED,EAAUF,MAAM,EAAG,GAAGC,cAAgBE,EAASH,MAAM,EAAG,GAAGC,gBAE5D,CAACR,KCFAzE,GAAYC,aAAW,SAACrD,GAAD,MAAY,CACvCmF,KAAM,CACJtD,MAAO,QAET2G,SAAU,CACRC,YAAa,EACbC,aAAc,GAEhBC,OAAQ,CACNlB,SAAU,MACV5F,MAAO,GACP+G,OAAQ,IAEVC,WAAY,CACVhH,MAAO,GACP+G,OAAQ,GACRE,QAAS,EACTrD,gBAAiB,cACjB3D,MAAOzD,EAAaM,SAASJ,UAS3BwK,GAAkD,SAAC,GAGlD,IAFLvI,EAEI,EAFJA,MACAH,EACI,EADJA,QAEMsD,EAAUP,KACVqB,EAAUC,cAEVsE,EAAWpB,GAAYvH,EAAQwH,MAMrC,OACE,eAACoB,GAAA,EAAD,CAAUhD,QAAM,EAAC/B,UAAWP,EAAQ6E,SAAUlD,QAL5B,WAClBb,EAAQO,KAAKC,GAAWC,SAASgE,KAAO,IAAM1I,IAI9C,UACE,cAAC2I,GAAA,EAAD,UACE,cAAC,GAAD,CAAcjF,UAAWP,EAAQgF,OAAjC,SAA0CK,MAE5C,cAACI,GAAA,EAAD,UACE,cAAChF,EAAA,EAAD,CAAYjC,QAAS,YAArB,SAAmC9B,EAAQwH,aAM7CwB,GAA+B,WACnC,IAAM1F,EAAUP,KACVqB,EAAUC,cAKhB,OACE,eAACuE,GAAA,EAAD,CAAUhD,QAAM,EAAC/B,UAAWP,EAAQ6E,SAAUlD,QAJ9B,WAChBb,EAAQO,KAAKC,GAAWC,SAASoE,MAGjC,UACE,cAACH,GAAA,EAAD,UACE,cAACxB,GAAA,EAAD,CAAQzD,UAAWP,EAAQkF,WAA3B,SACE,cAAC,KAAD,QAGJ,cAACO,GAAA,EAAD,UACE,cAAChF,EAAA,EAAD,CAAYjC,QAAS,YAArB,+BAqBOoH,GAfgB,WAC7B,IAAM5F,EAAUP,KACRlD,EAAmBW,qBAAWf,GAA9BI,eACR,OACE,eAACsJ,GAAA,EAAD,CAAMtF,UAAWP,EAAQwB,KAAzB,UACE,cAAC,GAAD,IACCjF,EAAeC,aAAasJ,KAAI,SAACpJ,EAASqJ,GACzC,OACE,cAAC,GAAD,CAAsClJ,MAAOkJ,EAAGrJ,QAASA,GAAzD,kBAAiCqJ,WC7D5BC,GA1BmB,WAAO,IAC/BjG,EAAckC,GAAc,GAA5BlC,UAEFe,EAAUC,cACRkF,EAAe9N,cAAf8N,WAWR,OACE,eAAC,EAAD,WACE,cAAC,GAAD,CAAYxC,OAXG,WACjB3C,EAAQO,KAAKC,GAAWc,UAUUgB,MAAO,iBACvC,eAAC,EAAD,CAAcrD,UAAWA,EAAzB,UACE,cAAC,GAAD,IACA,cAACtB,EAAD,CAAiBkD,QAVE,WACvBsE,IACAnF,EAAQO,KAAKC,GAAWc,UAQpB,+BCvBF3C,GAAYC,aAAW,SAACrD,GAAD,MAAY,CACvC6J,UAAW,CACTlI,UAAW3B,EAAM4B,QAAQ,QAkHdkI,GAtGiC,SAAC,GAM1C,IALLzJ,EAKI,EALJA,QACAgG,EAII,EAJJA,SACA0D,EAGI,EAHJA,OACAC,EAEI,EAFJA,SACAjH,EACI,EADJA,SAEMY,EAAUP,KAEC6G,EAASnO,cAAlBE,QAHJ,EAK0CC,mBAAS,IALnD,mBAKGiO,EALH,KAKoBC,EALpB,OAMwClO,mBAAS,IANjD,mBAMGmO,EANH,KAMmBC,EANnB,KAQEC,EAA0B,SAAClP,GAC/B,OAAK6O,EAID7O,EAAK+M,OAAS,KAAO8B,EAAKM,MAAMC,UAAUpP,IAC5C+O,EAAmB,yCACnBJ,GAAUA,EAAO,0CACV,IAGTI,EAAmB,IACnBJ,GAAUA,EAAO,KACV,IAXLhN,IAAMmE,MAAM,oDACL,IAaLuJ,EAAwB,SAACrP,GAC7BkP,EAAwBlP,GACxBiL,EAAS,2BACJhG,GADG,IAENqK,WAAYtP,MAIVuP,EAAoB,SAACvP,GACzB,OAAIA,EAAK+M,OAAS,GAChBkC,EAAkB,oBAClBN,GAAUA,EAAO,qBACV,IAETM,EAAkB,KACX,IAGHO,EAAkB,SAACxP,GACvBuP,EAAkBvP,GAClBiL,EAAS,2BACJhG,GADG,IAENwH,KAAMzM,MAgBV,OACE,qCACE,cAACoK,EAAD,CACEqF,YAAa,OACbrE,MAAOnG,EAAQwH,KACfxB,SAAU,SAACC,GAAD,OAAOsE,EAAgBtE,EAAEC,OAAOC,QAC1CtC,UAAWP,EAAQkG,UACnB3I,MAA0B,KAAnBkJ,EACPU,WAAYV,EACZ5C,KAAM,QACNuD,UAAQ,IAEV,cAACvF,EAAD,CACEqF,YAAa,mBACbrE,MAAOnG,EAAQqK,WACfrE,SAAU,SAACC,GAAD,OAAOmE,EAAsBnE,EAAEC,OAAOC,QAChDtC,UAAWP,EAAQkG,UACnB3I,MAA2B,KAApBgJ,EACPY,WAAYZ,EACZ1C,KAAM,QACNf,WAAS,EACTsE,UAAQ,IAEThI,EACD,cAACvB,EAAD,CACE8D,QA9Be,WANZ,CACLqF,EAAkBtK,EAAQwH,MAC1ByC,EAAwBjK,EAAQqK,aAChCM,OAAM,SAACC,GAAD,OAAOA,MAKfjB,KA6BIpD,WAAYwD,KAAoBF,EAFlC,sBCzGA9G,GAAYC,aAAW,SAACrD,GAAD,MAAY,CACvCsD,UAAW,CACTf,WAAYvC,EAAM4B,QAAQ,QA0CfsJ,GAtCkB,WAC/BtF,GAAc,EAAOX,GAAWC,SAASC,MAEzC,IAAMV,EAAUC,cACVf,EAAUP,KACRlD,EAAmBW,qBAAWf,GAA9BI,eAL6B,EAOPjE,mBAAmB,CAC/C4L,KAAM,GACN6C,WAAY,KATuB,mBAO9BrK,EAP8B,KAOrB8K,EAPqB,OAWflP,mBAAS,IAXM,mBAW9BmP,EAX8B,KAWzBrB,EAXyB,KAuBrC,OACE,eAAC,EAAD,WACE,cAAC,GAAD,CAAY3C,OAZG,WACjB3C,EAAQ4G,UAW0BtE,MAAO,gBACvC,qBAAK7C,UAAWP,EAAQL,UAAxB,SACE,cAAC,GAAD,CACE8H,IAAKA,EACLrB,OAAQA,EACR1J,QAASA,EACTgG,SAAU,SAAChG,GAAD,OAAa8K,EAAW9K,IAClC2J,SAfa,WACd3J,GAAmB,KAAR+K,IAChBlL,EAAeE,WAAWC,GAC1BoE,EAAQO,KAAKC,GAAWC,SAASC,gBCsBtBmG,GA9CmB,WAChC1F,GAAc,EAAOX,GAAWC,SAASC,MAEzC,IAAMV,EAAUC,cACRxE,EAAmBW,qBAAWf,GAA9BI,eAJ8B,EAKMQ,IAA3B6K,EALqB,EAK9BlL,QAA0BG,EALI,EAKJA,MALI,EAORvE,mBAASsP,GAPD,mBAO/BlL,EAP+B,KAOtB8K,EAPsB,KAShCK,EAAa,gBACHxK,IAAVR,GACJiE,EAAQO,KAAKC,GAAWC,SAASgE,KAAO,IAAM1I,IAgBhD,OAAKH,EAMH,eAAC,EAAD,WACE,cAAC,GAAD,CAAY+G,OAAQoE,EAAYzE,MAAO,SACvC,cAAC,GAAD,CACE1G,QAASA,EACTgG,SAAU8E,EACVnB,SAxBiB,WAChB3J,QAAqBW,IAAVR,IAChBN,EAAeK,YAAYC,EAAOH,GAClCtD,IAAMC,QAAQ,UACdwO,MAiBE,SAKE,cAACpJ,EAAD,CAAiBkD,QAnBF,WACdjF,IACLH,EAAeI,cAAcD,GAC7BoE,EAAQO,KAAKC,GAAWC,SAASC,QAgB7B,kCAZJV,EAAQO,KAAKC,GAAWC,SAASuG,MAC1B,O,UCzBLrI,GAAYC,aAAW,SAACrD,GAAD,MAAY,CACvC2I,OAAQ,CACNhH,UAAW3B,EAAM4B,QAAQ,GACzBC,MAAO,IACP+G,OAAQ,IACRnB,SAAU,SAEZiD,WAAY,CACV/I,UAAW3B,EAAM4B,QAAQ,GACzB3D,WAAY,IACZ4D,MAAO,IACPmF,UAAW,SACX0E,SAAU,cAEZC,UAAW,CACThK,UAAW3B,EAAM4B,QAAQ,IAE3BgK,eAAgB,CACdjK,UAAW3B,EAAM4B,QAAQ,QAqFdiK,GAjFwB,WACrCjG,GAAc,EAAOX,GAAWC,SAASC,MAEzC,IAAMxB,EAAUP,KACVqB,EAAUC,cAJ2B,EAMhBhE,IAAnBL,EANmC,EAMnCA,QAASG,EAN0B,EAM1BA,MACTzE,EAAYD,cAAZC,QAPmC,EAQPE,mBAAS,KARF,mBAQpC6P,EARoC,KAQxBC,EARwB,OClCf,SAC5BxQ,EACAuK,EACAkG,GACI,IACa/B,EAASnO,cAAlBE,QADL,EAGkCC,oBAAU,GAH5C,mBAGIgQ,EAHJ,KAGcC,EAHd,OAI+CjQ,mBAAS,GAJxD,mBAIIkQ,EAJJ,KAIuBC,EAJvB,KAqDH,OA/CAhQ,qBAAU,WACR,GAAK6N,EAAL,CACA,IAAIoC,GAAW,EAMf,OALApC,EAAKqC,IAAIC,cAAclP,MAAK,SAACmP,GACtBH,IACLH,EAAiBpL,OAAO0L,IACxBC,QAAQC,IAAIF,OAEP,WACLH,GAAW,MAEZ,CAACpC,IAEJ7N,qBAAU,WACR,GAAK6N,GAAS1O,GAASuK,IAAoB,IAAdmG,EAA7B,CAEA,IAAII,GAAW,EAcf,OAbAI,QAAQC,IAAInR,GACZ0O,EAAKqC,IACFK,YAAY,CACXpR,OACAuK,KACAmG,aAED5O,MAAK,SAACuP,GACAP,GACLD,EACEtL,OAAOmJ,EAAKM,MAAMsC,SAASD,EAAWX,GAAUrQ,iBAG/C,WACLyQ,GAAW,MAEZ,CAAC9Q,EAAMuK,EAAImE,EAAM+B,EAAQC,IAcrB,CACL/C,KAbW,WACXuD,QAAQC,IAAI,QACPzC,GAAS1O,GAASuK,IAAoB,IAAdmG,IAC7BQ,QAAQC,IAAI,SACZzC,EAAKqC,IAAIQ,gBAAgB,CACvBvR,OACAuK,KACAmG,WACAzF,MAAOyD,EAAKM,MAAMwC,MAAMf,EAAOpQ,gBAMjCoR,uBAAwBb,GDfec,CACvClR,EADqD,OAErDsE,QAFqD,IAErDA,OAFqD,EAErDA,EAASqK,WACT5J,OAAOgL,IAHDkB,EAVmC,EAUnCA,uBAAwB9D,EAVW,EAUXA,KAM1BgE,EAAW5Q,mBAAQ,WACvB,OAAO6Q,YAAqC,KAAzBH,GAA+BI,QAAQ,MACzD,CAACJ,IAWEhE,EAAWpB,IAAmB,OAAPvH,QAAO,IAAPA,OAAA,EAAAA,EAASwH,OAAQ,IAY9C,OACE,eAAC,EAAD,WACE,cAAC,GAAD,CACET,OAxBa,WACjB3C,EAAQO,KAAKC,GAAWC,SAASC,OAwB7B4B,MAAK,kBAAa1G,GAAWA,EAAQwH,MACrCR,UACE,cAAChF,EAAD,CAAYP,MAAO,YAAawD,QAvBrB,gBACHtE,IAAVR,GACJiE,EAAQO,KAAKC,GAAWC,SAASuG,KAAO,IAAMjL,IAqBxC,oBAKJ,cAAC,GAAD,CAAc0D,UAAWP,EAAQgF,OAAjC,SAA0CK,IAC1C,cAAC5E,EAAA,EAAD,CACEtC,MAAO,YACPK,QAAS,UACT+B,UAAWP,EAAQ+G,WAHrB,gBAKGrK,QALH,IAKGA,OALH,EAKGA,EAASqK,WAAW2C,gBAEvB,cAAC7H,EAAD,CACEhG,KAAM,SACNgH,MAAOsF,EACPzF,SAAU,SAACC,GAAD,OA1BkBlL,EA0BckL,EAAEC,OAAOC,WAzBvDuF,EAAc3Q,GADiB,IAACA,GA2B5B8I,UAAWP,EAAQgI,UACnB2B,WAAY,CACVC,aAAc,cAACC,GAAA,EAAD,CAAgBC,SAAS,MAAzB,oBAGlB,eAACrJ,EAAA,EAAD,CACEtC,MAAO,YACPK,QAAS,UACT+B,UAAWP,EAAQiI,eAHrB,sBAKYuB,WAAWH,EAAuBI,QAAQ,IALtD,SAKiEF,KAEjE,cAAC1L,EAAD,CAAe8D,QA7CA,WACjBmH,QAAQC,IAAI,MAEZxD,KA0CE,sBEpGAxH,GAAOvD,iBACA8G,GAAa,CACxBc,QAASrE,GAAO,IAChBgM,KAAMhM,GAAO,QACbwD,SAAU,CACRC,KAAMzD,GAAO,iBACb4H,IAAK5H,GAAO,eACZwH,KAAMxH,GAAO,gBACb+J,KAAM/J,GAAO,mBAkCFiM,GA9Ba,WAC1B,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAMnM,GAAnB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOmM,KAAM5I,GAAWyI,KAAxB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAM5I,GAAWC,SAASC,KAAvC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOyI,OAAK,EAACC,KAAM5I,GAAWC,SAASoE,IAAvC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOuE,KAAM5I,GAAWC,SAASgE,KAAO,OAAxC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAO2E,KAAM5I,GAAWC,SAASuG,KAAO,OAAxC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOmC,OAAK,EAACC,KAAM,IAAnB,SACE,cAAC,IAAD,CAAU/H,GAAIpE,aCvClBoM,GAAoC,SAAC,GAAkB,IAAhB/K,EAAe,EAAfA,SAC3C,OACE,cAAC,EAAWgL,SAAZ,UACG,YAAgB,IAAb/N,EAAY,EAAZA,MACF,OAAO,cAACgO,EAAA,EAAD,CAAehO,MAAOA,EAAtB,SAA8B+C,QAqC9BkL,GA/BO,WAAO,IAAD,EACAC,sBAAW,SAACC,EAAQ3O,GAC5C,OAAQA,GACN,IAAK,OACH,OAAOH,EAAOC,KAChB,IAAK,QACL,QACE,OAAOD,EAAOI,SAEjBJ,EAAOI,OATgB,mBACnBO,EADmB,KACZC,EADY,KAWpBiF,ErBPmB,WAAO,IAAD,EACSjJ,mBAAqB,IAD9B,mBACxBkE,EADwB,KACViO,EADU,KAGvBrS,EAAYD,cAAZC,QAHuB,EAIFF,cAArB6B,EAJuB,EAIvBA,QAASD,EAJc,EAIdA,QAEjBrB,qBAAU,WACR,GAAKL,EAAL,CACAqS,EAAgB,IAChB,IAAMC,EAAeC,aAAazR,QAAQd,GAC1C,GAAKsS,EAAL,CAEA,IAAIhC,GAAW,EAOf,OALA3O,EAAQ2Q,GAAchR,MAAK,SAACkR,GACrBlC,GACL+B,EAAgB5S,KAAKgT,MAAMD,OAGtB,WACLlC,GAAW,OAEZ,CAACtQ,EAAS2B,IAEb,IAAM+Q,EAAe,SAACtJ,GACfpJ,IACe,IAAhBoJ,EAAKgD,OAIT1K,EAAQjC,KAAKC,UAAU0J,IAAO9H,MAAK,SAACqR,GAClCJ,aAAa/Q,QAAQxB,EAAS2S,MAJ9BJ,aAAaK,WAAW5S,KA0C5B,MAAO,CACLoE,eACAsO,eACArO,WArCiB,SAACC,GAClB+N,GAAgB,SAACQ,GACf,IAAMC,EAAI,YAAOD,GAGjB,OAFAC,EAAK7J,KAAK3E,GACVoO,EAAaI,GACNA,MAiCTvO,cA7BoB,SAACD,GACrB+N,GAAgB,SAACQ,GACf,IAAMlF,EAAIkF,EAAKE,WACb,SAACC,GAAD,OAAOA,EAAElH,OAASxH,EAAQwH,MAAQkH,EAAErE,aAAerK,EAAQqK,cAE7D,IAAW,IAAPhB,EAAU,OAAOkF,EAErB,IAAMC,EAAI,YAAOD,GAGjB,OAFAC,EAAKG,OAAOtF,EAAG,GACf+E,EAAaI,GACNA,MAoBTtO,YAhBkB,SAACmJ,EAAWrJ,GAC9B,GAAIqJ,EAAI,GAAKA,GAAKvJ,EAAagI,OAC7B,MAAMrL,MAAM,8BACdsR,GAAgB,SAACQ,GACf,IAAMC,EAAI,YAAOD,GAGjB,OAFAC,EAAKnF,GAAKrJ,EACVoO,EAAaI,GACNA,OqB1DMI,GAEjB,OACE,cAAC,EAAWC,SAAZ,CACE1I,MAAO,CACLxG,MAAOA,EACPC,SAAU,SAACT,GAAD,OAAUS,EAAST,IAC7BU,eAAgBgF,GAJpB,SAOE,eAAC,GAAD,WACE,cAACiK,EAAA,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,IACA,cAAC,GAAD,U,qBCnCRC,IAASC,OACP,cAAC,IAAD,CAAmBC,WALF,SAACC,EAAeC,GACjC,OAAO,IAAIC,KAAKF,IAIhB,SACE,cAAC,GAAD,MAEFG,SAASC,eAAe,W","file":"static/js/main.754ed36a.chunk.js","sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport Web3 from 'web3'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { encrypt as ethEncrypt } from 'eth-sig-util'\nimport { toast } from 'react-toastify'\n\ninterface Ethereum {\n  request: (options: { method: string; params: any[] }) => any\n\n  [key: string]: any\n}\n\nconst _encrypt = (text: string, publicKey: string) => {\n  return Buffer.from(\n    JSON.stringify(\n      ethEncrypt(publicKey, { data: text }, 'x25519-xsalsa20-poly1305')\n    )\n  ).toString('hex')\n}\n\n/**\n * Metamask API for public key encryption / decryption\n * https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n */\nexport const useMetaMaskEncryption = () => {\n  const { account, library } = useWeb3React<Web3>()\n\n  const [encryptionPublicKey, setEncryptionPublicKey] = useState<null | string>(\n    null\n  )\n\n  useEffect(() => {\n    setEncryptionPublicKey('')\n  }, [account])\n\n  const ethereum = useMemo(() => {\n    if (!library) return\n    return library.givenProvider as Ethereum\n  }, [library])\n\n  const requestMetaMaskPublicKey = useCallback(async (): Promise<string> => {\n    if (encryptionPublicKey) return encryptionPublicKey\n    const sessionStoragePk = sessionStorage.getItem(`pk-${account}`)\n    if (sessionStoragePk) return sessionStoragePk\n    if (!ethereum) throw Error('ethereum library undefined')\n    toast.success('please approve request to encrypt contacts', {\n      toastId: 'encrypt-request',\n    })\n    return ethereum\n      .request({\n        method: 'eth_getEncryptionPublicKey',\n        params: [account],\n      })\n      .then((key: string) => {\n        setEncryptionPublicKey(key)\n        sessionStorage.setItem(`pk-${account}`, key)\n        toast.dismiss('encrypt-request')\n        return key\n      })\n  }, [encryptionPublicKey, ethereum, account])\n\n  const encrypt = useCallback(\n    async (text: string) => {\n      if (!encryptionPublicKey) {\n        return requestMetaMaskPublicKey().then((publicKey) => {\n          return _encrypt(text, publicKey)\n        })\n      }\n      return _encrypt(text, encryptionPublicKey)\n    },\n    [requestMetaMaskPublicKey, encryptionPublicKey]\n  )\n\n  const decrypt = useCallback(\n    (text: string): Promise<string> => {\n      if (!ethereum) throw Error('ethereum library undefined')\n      toast.success('please approve request to decrypt contacts', {\n        toastId: 'decrypt-request',\n        autoClose: false,\n      })\n      return ethereum\n        .request({\n          method: 'eth_decrypt',\n          params: [text, account],\n        })\n        .then((res: string) => {\n          toast.dismiss('decrypt-request')\n          return res\n        })\n    },\n    [account, ethereum]\n  )\n\n  return {\n    encrypt,\n    decrypt,\n    encryptionPublicKey,\n    requestMetaMaskPublicKey,\n  }\n}\n","export const fontMayaSamuelsExtraLight = {\n  fontFamily: 'MayaSamuelsExtraLight',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 400,\n  src: `\n    local('MayaSamuels-ExtraLight'),\n    url('${process.env.PUBLIC_URL}/fonts/maya-samuels-extralight.ttf') format('truetype')\n  `,\n}\n\nexport const fontMayaSamuelsLight = {\n  fontFamily: 'MayaSamuelsLight',\n  fontStyle: 'normal',\n  fontDisplay: 'swap',\n  fontWeight: 400,\n  src: `\n    local('MayaSamuels-Light'),\n    url('${process.env.PUBLIC_URL}/fonts/maya-samuels-light.ttf') format('truetype')\n  `,\n}\n","import { createTheme, ThemeOptions } from '@material-ui/core'\nimport { blue, blueGrey, common, orange } from '@material-ui/core/colors'\nimport { fontMayaSamuelsExtraLight, fontMayaSamuelsLight } from './font'\n\nexport const colorPalette = {\n  orange: {\n    ...orange,\n    main: '#E0643A',\n  },\n  darkBlue: {\n    ...blue,\n    main: '#526AA2',\n  },\n  blueGrey: {\n    ...blueGrey,\n    main: '#8C96A8',\n  },\n  darkGrey: {\n    main: '#5C5C5C',\n  },\n  lightGrey: {\n    main: '#F6F6F6',\n  },\n}\n\nconst themeDefault: ThemeOptions = {\n  palette: {\n    primary: colorPalette.orange,\n    secondary: colorPalette.darkBlue,\n    text: {\n      primary: colorPalette.darkGrey.main,\n    },\n  },\n  typography: {\n    fontFamily: [\n      'MayaSamuelsLight',\n      '-apple-system',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n  },\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        '@font-face': [\n          fontMayaSamuelsExtraLight as any,\n          fontMayaSamuelsLight as any,\n        ],\n      },\n    },\n  },\n}\n\nexport const themes = {\n  dark: createTheme({\n    ...themeDefault,\n    palette: {\n      ...themeDefault.palette,\n      type: 'dark',\n    },\n  }),\n  light: createTheme({\n    ...themeDefault,\n    palette: {\n      ...themeDefault.palette,\n      type: 'light',\n      background: {\n        default: common.white,\n      },\n    },\n  }),\n}\n","import { createContext } from 'react'\nimport { themes } from '../styles/theme'\n\nexport interface IContact {\n  name: string\n  ethAddress: string\n}\n\nconst AppContext = createContext({\n  theme: themes.light,\n  setTheme: (type: string) => {},\n  contactsModule: {\n    contactsList: [] as IContact[],\n    addContact: (contact: IContact) => {},\n    deleteContact: (contact: IContact) => {},\n    editContact: (index: number, newContact: IContact) => {},\n  },\n})\n\nexport default AppContext\n","import { useParams } from 'react-router'\nimport { useContext, useEffect, useMemo, useState } from 'react'\nimport AppContext, { IContact } from '../context/AppContext'\nimport { useWeb3React } from '@web3-react/core'\nimport { useMetaMaskEncryption } from './useMetaMaskEncryption'\n\nexport const useRouterContactLoader = () => {\n  const { id } = useParams<any>()\n  const { contactsModule } = useContext(AppContext)\n\n  const [contact, index] = useMemo(() => {\n    const index = Number(id)\n    if (isNaN(index)) {\n      return [undefined, undefined]\n    }\n    return [contactsModule.contactsList[index], index]\n  }, [contactsModule.contactsList, id])\n\n  return {\n    contact,\n    index,\n  }\n}\n\nexport const useContacts = () => {\n  const [contactsList, setContactsList] = useState<IContact[]>([])\n\n  const { account } = useWeb3React()\n  const { decrypt, encrypt } = useMetaMaskEncryption()\n\n  useEffect(() => {\n    if (!account) return\n    setContactsList([])\n    const encryptedStr = localStorage.getItem(account)\n    if (!encryptedStr) return\n\n    let isLoaded = true\n\n    decrypt(encryptedStr).then((jsonStr: string) => {\n      if (!isLoaded) return\n      setContactsList(JSON.parse(jsonStr))\n    })\n\n    return () => {\n      isLoaded = false\n    }\n  }, [account, decrypt])\n\n  const saveContacts = (list: IContact[]) => {\n    if (!account) return\n    if (list.length === 0) {\n      localStorage.removeItem(account)\n      return\n    }\n    encrypt(JSON.stringify(list)).then((encryptedTxt) => {\n      localStorage.setItem(account, encryptedTxt)\n    })\n  }\n\n  const addContact = (contact: IContact) => {\n    setContactsList((prev) => {\n      const copy = [...prev]\n      copy.push(contact)\n      saveContacts(copy)\n      return copy\n    })\n  }\n\n  const deleteContact = (contact: IContact) => {\n    setContactsList((prev) => {\n      const i = prev.findIndex(\n        (c) => c.name === contact.name && c.ethAddress === contact.ethAddress\n      )\n      if (i === -1) return prev\n\n      const copy = [...prev]\n      copy.splice(i, 1)\n      saveContacts(copy)\n      return copy\n    })\n  }\n\n  const editContact = (i: number, contact: IContact) => {\n    if (i < 0 || i >= contactsList.length)\n      throw Error('contact index out of range')\n    setContactsList((prev) => {\n      const copy = [...prev]\n      copy[i] = contact\n      saveContacts(copy)\n      return copy\n    })\n  }\n\n  return {\n    contactsList,\n    saveContacts,\n    addContact,\n    deleteContact,\n    editContact,\n  }\n}\n","import React, { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { NoEthereumProviderError } from '@web3-react/injected-connector'\nimport Web3 from 'web3'\nimport { toast } from 'react-toastify'\n\nconst ErrorNotifications: React.FC = () => {\n  const { error } = useWeb3React<Web3>()\n\n  useEffect(() => {\n    if (!error) return\n\n    if (error instanceof NoEthereumProviderError) {\n      toast.error(\n        'Failed to establish wallet connection! Please use a browser with metamask, https://metamask.io',\n        {\n          toastId: `window.ethereum=undefined`,\n          autoClose: false,\n        }\n      )\n    } else {\n      toast.error(error.message)\n    }\n  }, [error])\n\n  return null\n}\n\nexport default ErrorNotifications\n","import { InjectedConnector } from '@web3-react/injected-connector'\n\n/**\n * Chain IDs\n Mainnet : Ethereum main network\n chain_id: 1\n Ropsten : Ethereum test network (PoW)\n chain_id: 3\n Rinkeby : Ethereum test network (PoA)\n chain_id: 4\n Goerli:\n chain_id: 5\n Kovan : Ethereum test network (PoA)\n chain_id: 42\n */\nexport const injectedConnector = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42],\n})\n","import React from 'react'\nimport { Button, ButtonProps, withStyles } from '@material-ui/core'\n\nexport const PrimaryButton = withStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n    width: '100%',\n    color: theme.palette.common.white,\n    borderRadius: 30,\n    textTransform: 'none',\n  },\n}))((props: ButtonProps) => (\n  <Button variant={'contained'} color={'primary'} {...props} />\n))\n\nexport const SecondaryButton = withStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n    width: '100%',\n    color: theme.palette.common.white,\n    borderRadius: 30,\n    textTransform: 'none',\n  },\n}))((props: ButtonProps) => (\n  <Button variant={'contained'} color={'secondary'} {...props} />\n))\n\nexport const TextButton = withStyles((theme) => ({\n  root: {\n    textTransform: 'none',\n  },\n}))((props: ButtonProps) => <Button variant={'text'} {...props} />)\n","import React from 'react'\nimport { Container, ContainerProps, Fade, withStyles } from '@material-ui/core'\n\nconst MuiContainer: React.FC<ContainerProps> = (props) => {\n  const { children, ...other } = props\n  return (\n    <Fade in>\n      <Container {...other}>{children}</Container>\n    </Fade>\n  )\n}\n\nconst PageContainer = withStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    maxWidth: theme.breakpoints.values.sm,\n  },\n}))(MuiContainer)\nexport default PageContainer\n","import React, { useState, useEffect } from 'react'\nimport { CircularProgress, makeStyles, Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: theme.spacing(2),\n  },\n  message: {\n    marginTop: theme.spacing(2),\n  },\n  threeDots: {\n    width: 20,\n    display: 'inline',\n  },\n  messageContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n  },\n}))\n\ninterface LoadingPanelProps {\n  isLoading: boolean\n  message?: string\n}\n\nconst LoadingPanel: React.FC<LoadingPanelProps> = ({\n  children,\n  isLoading,\n  message,\n}) => {\n  const classes = useStyles()\n\n  const [threeDots, setThreeDots] = useState('')\n\n  // three dots animation\n  useEffect(() => {\n    if (!isLoading) {\n      setThreeDots('')\n      return\n    }\n\n    let dotLength = 0\n    const cycle = () => {\n      if (dotLength === 3) {\n        setThreeDots('')\n        dotLength = 0\n        return\n      }\n      dotLength += 1\n      setThreeDots('...'.substr(0, dotLength))\n    }\n    const interval = setInterval(cycle, 500)\n    return () => {\n      clearInterval(interval)\n      setThreeDots('')\n    }\n  }, [isLoading])\n\n  if (!isLoading) {\n    return <>{children}</>\n  }\n\n  return (\n    <div className={classes.container}>\n      <CircularProgress />\n      <div className={classes.messageContainer}>\n        <div className={classes.threeDots} />\n        <Typography variant={'body1'} className={classes.message}>\n          {message ? message : 'loading'}\n        </Typography>\n        <Typography variant={'body1'} className={classes.threeDots}>\n          {threeDots}\n        </Typography>\n      </div>\n    </div>\n  )\n}\n\nexport default LoadingPanel\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles, Typography } from '@material-ui/core'\nimport { useHistory } from 'react-router'\nimport { useWeb3React } from '@web3-react/core'\nimport { injectedConnector } from '../web3/injector-connector'\nimport Web3 from 'web3'\nimport { PrimaryButton } from '../components/Buttons'\nimport PageContainer from '../components/layout/PageContainer'\nimport LoadingPanel from '../components/LoadingPanel'\nimport { routePaths } from './Router'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '80vh',\n  },\n  text: {\n    marginTop: theme.spacing(2),\n  },\n  logo: {\n    width: '50%',\n  },\n}))\n\nconst WelcomePage: React.FC = () => {\n  const classes = useStyles()\n\n  const history = useHistory()\n  const { activate, active } = useWeb3React<Web3>()\n\n  const [isLoading, setLoading] = useState(false)\n  const [redirectOnSuccess, setRedirectOnSuccess] = useState(false)\n\n  useEffect(() => {\n    if (active && redirectOnSuccess) {\n      history.push(routePaths.contacts.list)\n    }\n  }, [history, active, redirectOnSuccess])\n\n  const handleStart = () => {\n    if (active) {\n      history.push(routePaths.contacts.list)\n      return\n    }\n    setLoading(true)\n    setRedirectOnSuccess(true)\n    activate(injectedConnector).finally(() => setLoading(false))\n  }\n\n  return (\n    <PageContainer className={classes.container}>\n      <img\n        src={process.env.PUBLIC_URL + '/images/metamask-fox.svg'}\n        alt={'logo'}\n        className={classes.logo}\n      />\n      <Typography align=\"center\" variant={'h5'}>\n        Crypto address book\n      </Typography>\n      <Typography align=\"center\" variant={'body1'} className={classes.text}>\n        The easiest and quickest way to manage and pay your contacts. Connect\n        your wallet to begin.\n      </Typography>\n      <LoadingPanel isLoading={isLoading} message={'connecting to wallet'}>\n        <PrimaryButton onClick={handleStart}>Connect Wallet</PrimaryButton>\n      </LoadingPanel>\n    </PageContainer>\n  )\n}\n\nexport default WelcomePage\n","import { withStyles, TextField, TextFieldProps } from '@material-ui/core'\nimport { colorPalette } from '../styles/theme'\n\nexport const StyledTextField = withStyles({\n  root: {\n    '& .MuiOutlinedInput-root': {\n      backgroundColor: colorPalette.lightGrey.main,\n      borderRadius: 30,\n      '& fieldset': {\n        borderRadius: 30,\n        borderStyle: 'hidden',\n      },\n    },\n    width: '100%',\n  },\n})((props: TextFieldProps) => <TextField variant={'outlined'} {...props} />)\n","import { routePaths } from '../pages/Router'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router'\nimport { injectedConnector } from '../web3/injector-connector'\n\n/**\n * React Hook, autoLoad web3\n */\nexport const useWeb3Loader = (\n  autoConnect: boolean = false,\n  to = routePaths.welcome\n) => {\n  const { active, activate } = useWeb3React()\n  const [isLoading, setIsLoading] = useState(true)\n  const history = useHistory()\n\n  useEffect(() => {\n    if (!active) {\n      if (autoConnect) {\n        activate(injectedConnector).then(() => {\n          setIsLoading(false)\n        })\n      } else {\n        history.push(to)\n      }\n    } else {\n      setIsLoading(false)\n    }\n  }, [active, to, autoConnect, activate, history])\n\n  return {\n    isLoading,\n  }\n}\n","import React, { useMemo, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, makeStyles, Typography } from '@material-ui/core'\nimport Web3 from 'web3'\nimport PageContainer from '../components/layout/PageContainer'\nimport LoadingPanel from '../components/LoadingPanel'\nimport { PrimaryButton, SecondaryButton } from '../components/Buttons'\nimport { StyledTextField } from '../components/StyledTextField'\nimport { useWeb3Loader } from '../hooks/useWeb3Loader'\nimport { useMetaMaskEncryption } from '../hooks/useMetaMaskEncryption'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginTop: theme.spacing(4),\n  },\n}))\n\nconst TestPage: React.FC = () => {\n  const classes = useStyles()\n  const { account, library } = useWeb3React<Web3>()\n\n  const [text, setText] = useState('')\n\n  const accountAddress = useMemo(() => {\n    if (!account) return 'Metamask connection required'\n\n    return account\n  }, [account])\n\n  const { isLoading } = useWeb3Loader(true)\n  const {\n    encrypt,\n    decrypt,\n    encryptionPublicKey,\n    requestMetaMaskPublicKey,\n  } = useMetaMaskEncryption()\n\n  const handleSend = () => {\n    if (!library) return\n  }\n\n  const handleEncrypt = () => {\n    if (!encryptionPublicKey) return\n    encrypt(text).then((result) => setText(result))\n  }\n\n  const handleDecrypt = () => {\n    decrypt(text).then((result) => setText(result))\n  }\n\n  return (\n    <PageContainer>\n      <Typography variant={'h2'}>Test Page</Typography>\n      <LoadingPanel isLoading={isLoading}>\n        <Typography variant={'caption'}>{accountAddress}</Typography>\n        <Button onClick={handleSend}>Send</Button>\n        <StyledTextField\n          onChange={(e) => setText(e.target.value)}\n          value={text}\n          multiline\n          minRows={3}\n        />\n        <PrimaryButton onClick={handleEncrypt} disabled={!encryptionPublicKey}>\n          Encrypt\n        </PrimaryButton>\n        <SecondaryButton onClick={handleDecrypt}>Decrypt</SecondaryButton>\n        <SecondaryButton onClick={requestMetaMaskPublicKey}>\n          Request Key\n        </SecondaryButton>\n        <Button\n          className={classes.button}\n          color={'primary'}\n          fullWidth\n          variant={'contained'}\n        >\n          Normal Button\n        </Button>\n      </LoadingPanel>\n    </PageContainer>\n  )\n}\n\nexport default TestPage\n","import React from 'react'\nimport { IconButton, makeStyles, Typography } from '@material-ui/core'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  backButton: {},\n  title: {\n    textAlign: 'center',\n  },\n  rightSizeContainer: {\n    minWidth: 48,\n  },\n}))\n\ninterface PageHeaderProps {\n  onBack: () => void\n  title: string\n  rightSide?: JSX.Element\n  className?: string\n}\n\nexport const PageHeader: React.FC<PageHeaderProps> = ({\n  onBack,\n  title,\n  rightSide,\n  className,\n}) => {\n  const classes = useStyles()\n  return (\n    <div className={clsx(classes.container, className)}>\n      <IconButton\n        size={'medium'}\n        onClick={onBack}\n        className={classes.backButton}\n      >\n        <ArrowBackIosIcon fontSize=\"inherit\" />\n      </IconButton>\n      <Typography variant={'subtitle1'} className={classes.title}>\n        {title}\n      </Typography>\n      <div className={classes.rightSizeContainer}>{rightSide}</div>\n    </div>\n  )\n}\n","import { Avatar, withStyles } from '@material-ui/core'\nimport { colorPalette } from '../styles/theme'\n\nexport const StyledAvatar = withStyles((theme) => ({\n  root: {\n    backgroundColor: colorPalette.blueGrey.main,\n    color: theme.palette.common.white,\n  },\n}))(Avatar)\n\nexport default StyledAvatar\n","import { useMemo } from 'react'\n\nexport const useInitials = (name: string) => {\n  return useMemo(() => {\n    const words = name.split(' ')\n    const cleanedWords = words.filter((w) => w.trim().length)\n\n    if (cleanedWords.length === 0) {\n      return '?'\n    }\n\n    if (cleanedWords.length === 1) {\n      return cleanedWords[0].slice(0, 2).toUpperCase()\n    }\n\n    const [firstName, lastName] = cleanedWords\n\n    return (\n      firstName.slice(0, 1).toUpperCase() + lastName.slice(0, 1).toUpperCase()\n    )\n  }, [name])\n}\n","import React, { useContext } from 'react'\nimport {\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Typography,\n} from '@material-ui/core'\nimport { colorPalette } from '../styles/theme'\nimport AddIcon from '@material-ui/icons/Add'\nimport { useHistory } from 'react-router-dom'\nimport { routePaths } from '../pages/Router'\nimport AppContext, { IContact } from '../context/AppContext'\nimport StyledAvatar from './StyledAvatar'\nimport { useInitials } from '../hooks/useInitials'\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    width: '100%',\n  },\n  listItem: {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  avatar: {\n    fontSize: '1em',\n    width: 40,\n    height: 40,\n  },\n  iconButton: {\n    width: 40,\n    height: 40,\n    padding: 0,\n    backgroundColor: 'transparent',\n    color: colorPalette.darkGrey.main,\n  },\n}))\n\ninterface ListItemContactProps {\n  index: number\n  contact: IContact\n}\n\nconst ListItemContact: React.FC<ListItemContactProps> = ({\n  index,\n  contact,\n}) => {\n  const classes = useStyles()\n  const history = useHistory()\n\n  const initials = useInitials(contact.name)\n\n  const handleClick = () => {\n    history.push(routePaths.contacts.send + '/' + index)\n  }\n\n  return (\n    <ListItem button className={classes.listItem} onClick={handleClick}>\n      <ListItemAvatar>\n        <StyledAvatar className={classes.avatar}>{initials}</StyledAvatar>\n      </ListItemAvatar>\n      <ListItemText>\n        <Typography variant={'subtitle1'}>{contact.name}</Typography>\n      </ListItemText>\n    </ListItem>\n  )\n}\n\nconst ListItemAddContact: React.FC = () => {\n  const classes = useStyles()\n  const history = useHistory()\n\n  const handleAdd = () => {\n    history.push(routePaths.contacts.new)\n  }\n  return (\n    <ListItem button className={classes.listItem} onClick={handleAdd}>\n      <ListItemAvatar>\n        <Avatar className={classes.iconButton}>\n          <AddIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText>\n        <Typography variant={'subtitle1'}>New Contact</Typography>\n      </ListItemText>\n    </ListItem>\n  )\n}\n\nconst ContactsList: React.FC = () => {\n  const classes = useStyles()\n  const { contactsModule } = useContext(AppContext)\n  return (\n    <List className={classes.list}>\n      <ListItemAddContact />\n      {contactsModule.contactsList.map((contact, i) => {\n        return (\n          <ListItemContact key={`contact-${i}`} index={i} contact={contact} />\n        )\n      })}\n    </List>\n  )\n}\n\nexport default ContactsList\n","import PageContainer from '../../components/layout/PageContainer'\nimport { PageHeader } from '../../components/layout/PageHeader'\nimport React from 'react'\nimport { useHistory } from 'react-router'\nimport ContactsList from '../../components/ContactsList'\nimport { SecondaryButton } from '../../components/Buttons'\nimport { useWeb3React } from '@web3-react/core'\nimport Web3 from 'web3'\nimport LoadingPanel from '../../components/LoadingPanel'\nimport { useWeb3Loader } from '../../hooks/useWeb3Loader'\nimport { routePaths } from '../Router'\n\nconst AddressBookPage: React.FC = () => {\n  const { isLoading } = useWeb3Loader(true)\n\n  const history = useHistory()\n  const { deactivate } = useWeb3React<Web3>()\n\n  const handleBack = () => {\n    history.push(routePaths.welcome)\n  }\n\n  const handleDeactivate = () => {\n    deactivate()\n    history.push(routePaths.welcome)\n  }\n\n  return (\n    <PageContainer>\n      <PageHeader onBack={handleBack} title={'Address Book'} />\n      <LoadingPanel isLoading={isLoading}>\n        <ContactsList />\n        <SecondaryButton onClick={handleDeactivate}>Disconnect</SecondaryButton>\n      </LoadingPanel>\n    </PageContainer>\n  )\n}\n\nexport default AddressBookPage\n","import React, { useState } from 'react'\nimport { IContact } from '../context/AppContext'\nimport { StyledTextField } from './StyledTextField'\nimport { toast } from 'react-toastify'\nimport { makeStyles } from '@material-ui/core'\nimport { useWeb3React } from '@web3-react/core'\nimport Web3 from 'web3'\nimport { PrimaryButton } from './Buttons'\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    marginTop: theme.spacing(2),\n  },\n}))\n\ninterface ContactFormProps {\n  contact: IContact\n  onChange: (contact: IContact) => void\n  onSubmit: () => void\n  setErr?: (err: string) => void\n  err?: string\n}\n\nconst ContactForm: React.FC<ContactFormProps> = ({\n  contact,\n  onChange,\n  setErr,\n  onSubmit,\n  children,\n}) => {\n  const classes = useStyles()\n\n  const { library: web3 } = useWeb3React<Web3>()\n\n  const [ethAddressError, setEthAddressError] = useState('')\n  const [nameInputError, setNameInputError] = useState('')\n\n  const validateEthAddressInput = (text: string) => {\n    if (!web3) {\n      toast.error('web3 library undefined, please try refresh page')\n      return false\n    }\n    if (text.length < 40 || !web3.utils.isAddress(text)) {\n      setEthAddressError('Please enter a valid Ethereum address')\n      setErr && setErr('Please enter a valid Ethereum address')\n      return false\n    }\n\n    setEthAddressError('')\n    setErr && setErr('')\n    return true\n  }\n\n  const handleEthAddressInput = (text: string) => {\n    validateEthAddressInput(text) // trigger error render, ignore result\n    onChange({\n      ...contact,\n      ethAddress: text,\n    })\n  }\n\n  const validateNameInput = (text: string) => {\n    if (text.length < 1) {\n      setNameInputError('Name is required')\n      setErr && setErr('Name is required')\n      return false\n    }\n    setNameInputError('')\n    return true\n  }\n\n  const handleNameInput = (text: string) => {\n    validateNameInput(text)\n    onChange({\n      ...contact,\n      name: text,\n    })\n  }\n\n  const validateAll = () => {\n    return [\n      validateNameInput(contact.name),\n      validateEthAddressInput(contact.ethAddress),\n    ].every((v) => v)\n  }\n\n  const handleSubmit = () => {\n    if (!validateAll()) return\n    onSubmit()\n  }\n\n  return (\n    <>\n      <StyledTextField\n        placeholder={'Name'}\n        value={contact.name}\n        onChange={(e) => handleNameInput(e.target.value)}\n        className={classes.textField}\n        error={nameInputError !== ''}\n        helperText={nameInputError}\n        size={'small'}\n        required\n      />\n      <StyledTextField\n        placeholder={'Ethereum address'}\n        value={contact.ethAddress}\n        onChange={(e) => handleEthAddressInput(e.target.value)}\n        className={classes.textField}\n        error={ethAddressError !== ''}\n        helperText={ethAddressError}\n        size={'small'}\n        multiline\n        required\n      />\n      {children}\n      <PrimaryButton\n        onClick={handleSubmit}\n        disabled={!!nameInputError || !!ethAddressError}\n      >\n        Save\n      </PrimaryButton>\n    </>\n  )\n}\n\nexport default ContactForm\n","import React, { useContext, useState } from 'react'\nimport PageContainer from '../../components/layout/PageContainer'\nimport { PageHeader } from '../../components/layout/PageHeader'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core'\nimport { routePaths } from '../Router'\nimport AppContext, { IContact } from '../../context/AppContext'\nimport ContactForm from '../../components/ContactForm'\nimport { useWeb3Loader } from '../../hooks/useWeb3Loader'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(2),\n  },\n}))\n\nconst ContactAddPage: React.FC = () => {\n  useWeb3Loader(false, routePaths.contacts.list)\n\n  const history = useHistory()\n  const classes = useStyles()\n  const { contactsModule } = useContext(AppContext)\n\n  const [contact, setContact] = useState<IContact>({\n    name: '',\n    ethAddress: '',\n  })\n  const [err, setErr] = useState('')\n\n  const handleBack = () => {\n    history.goBack()\n  }\n\n  const handleSubmit = () => {\n    if (!contact || err !== '') return\n    contactsModule.addContact(contact)\n    history.push(routePaths.contacts.list)\n  }\n\n  return (\n    <PageContainer>\n      <PageHeader onBack={handleBack} title={'New Contact'} />\n      <div className={classes.container}>\n        <ContactForm\n          err={err}\n          setErr={setErr}\n          contact={contact}\n          onChange={(contact) => setContact(contact)}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </PageContainer>\n  )\n}\nexport default ContactAddPage\n","import React, { useContext, useState } from 'react'\nimport PageContainer from '../../components/layout/PageContainer'\nimport { PageHeader } from '../../components/layout/PageHeader'\nimport { useHistory } from 'react-router'\nimport { routePaths } from '../Router'\nimport { SecondaryButton } from '../../components/Buttons'\nimport AppContext from '../../context/AppContext'\nimport { useRouterContactLoader } from '../../hooks/useContacts'\nimport ContactForm from '../../components/ContactForm'\nimport { toast } from 'react-toastify'\nimport { useWeb3Loader } from '../../hooks/useWeb3Loader'\n\nconst ContactEditPage: React.FC = () => {\n  useWeb3Loader(false, routePaths.contacts.list)\n\n  const history = useHistory()\n  const { contactsModule } = useContext(AppContext)\n  const { contact: originalContact, index } = useRouterContactLoader()\n\n  const [contact, setContact] = useState(originalContact)\n\n  const handleBack = () => {\n    if (index === undefined) return\n    history.push(routePaths.contacts.send + '/' + index)\n  }\n\n  const handleEditSave = () => {\n    if (!contact || index === undefined) return\n    contactsModule.editContact(index, contact)\n    toast.success('saved!')\n    handleBack()\n  }\n\n  const handleDelete = () => {\n    if (!contact) return\n    contactsModule.deleteContact(contact)\n    history.push(routePaths.contacts.list)\n  }\n\n  if (!contact) {\n    history.push(routePaths.contacts.edit)\n    return null\n  }\n\n  return (\n    <PageContainer>\n      <PageHeader onBack={handleBack} title={'Edit'} />\n      <ContactForm\n        contact={contact}\n        onChange={setContact}\n        onSubmit={handleEditSave}\n      >\n        <SecondaryButton onClick={handleDelete}>Delete Contact</SecondaryButton>\n      </ContactForm>\n    </PageContainer>\n  )\n}\n\nexport default ContactEditPage\n","import React, { useMemo, useState } from 'react'\nimport PageContainer from '../../components/layout/PageContainer'\nimport { PageHeader } from '../../components/layout/PageHeader'\nimport { useHistory } from 'react-router'\nimport { routePaths } from '../Router'\nimport { PrimaryButton, TextButton } from '../../components/Buttons'\nimport { useRouterContactLoader } from '../../hooks/useContacts'\nimport { InputAdornment, makeStyles, Typography } from '@material-ui/core'\nimport { useWeb3Loader } from '../../hooks/useWeb3Loader'\nimport StyledAvatar from '../../components/StyledAvatar'\nimport { useInitials } from '../../hooks/useInitials'\nimport { useWeb3React } from '@web3-react/core'\nimport { StyledTextField } from '../../components/StyledTextField'\nimport Web3 from 'web3'\nimport { useWeb3SendEth } from '../../hooks/useWeb3SendEth'\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    marginTop: theme.spacing(4),\n    width: 100,\n    height: 100,\n    fontSize: '2.5em',\n  },\n  ethAddress: {\n    marginTop: theme.spacing(2),\n    fontWeight: 550,\n    width: 160,\n    textAlign: 'center',\n    wordWrap: 'break-word',\n  },\n  textInput: {\n    marginTop: theme.spacing(2),\n  },\n  transactionFee: {\n    marginTop: theme.spacing(2),\n  },\n}))\n\nconst ContactSendValuePage: React.FC = () => {\n  useWeb3Loader(false, routePaths.contacts.list)\n\n  const classes = useStyles()\n  const history = useHistory()\n\n  const { contact, index } = useRouterContactLoader()\n  const { account } = useWeb3React<Web3>()\n  const [sendAmount, setSendAmount] = useState('0')\n\n  const { transactionFeeEstimate, send } = useWeb3SendEth(\n    account,\n    contact?.ethAddress,\n    Number(sendAmount)\n  )\n\n  const usdValue = useMemo(() => {\n    return parseFloat((transactionFeeEstimate * 3100).toFixed(2))\n  }, [transactionFeeEstimate])\n\n  const handleBack = () => {\n    history.push(routePaths.contacts.list)\n  }\n\n  const handleEdit = () => {\n    if (index === undefined) return\n    history.push(routePaths.contacts.edit + '/' + index)\n  }\n\n  const initials = useInitials(contact?.name || '')\n\n  const handleSend = () => {\n    console.log('hi')\n\n    send()\n  }\n\n  const handleEthSendValueChange = (text: string) => {\n    setSendAmount(text)\n  }\n\n  return (\n    <PageContainer>\n      <PageHeader\n        onBack={handleBack}\n        title={`Send to ${contact && contact.name}`}\n        rightSide={\n          <TextButton color={'secondary'} onClick={handleEdit}>\n            Edit\n          </TextButton>\n        }\n      />\n      <StyledAvatar className={classes.avatar}>{initials}</StyledAvatar>\n      <Typography\n        color={'secondary'}\n        variant={'caption'}\n        className={classes.ethAddress}\n      >\n        {contact?.ethAddress.toLowerCase()}\n      </Typography>\n      <StyledTextField\n        type={'number'}\n        value={sendAmount}\n        onChange={(e) => handleEthSendValueChange(e.target.value)}\n        className={classes.textInput}\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">ETH</InputAdornment>,\n        }}\n      />\n      <Typography\n        color={'secondary'}\n        variant={'caption'}\n        className={classes.transactionFee}\n      >\n        Txn fee: {parseFloat(transactionFeeEstimate.toFixed(6))} ETH ${usdValue}\n      </Typography>\n      <PrimaryButton onClick={handleSend}>Send</PrimaryButton>\n    </PageContainer>\n  )\n}\n\nexport default ContactSendValuePage\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport Web3 from 'web3'\n\nexport const useWeb3SendEth = (\n  from: string | undefined | null,\n  to: string | undefined | null,\n  amount: number\n) => {\n  const { library: web3 } = useWeb3React<Web3>()\n\n  const [gasPrice, setCacheGasPrice] = useState(-1)\n  const [transactionFeeEst, setTransactionFeeEst] = useState(0)\n\n  useEffect(() => {\n    if (!web3) return\n    let isLoaded = true\n    web3.eth.getGasPrice().then((price) => {\n      if (!isLoaded) return\n      setCacheGasPrice(Number(price))\n      console.log(price)\n    })\n    return () => {\n      isLoaded = false\n    }\n  }, [web3])\n\n  useEffect(() => {\n    if (!web3 || !from || !to || gasPrice === -1) return\n\n    let isLoaded = true\n    console.log(from)\n    web3.eth\n      .estimateGas({\n        from,\n        to,\n        gasPrice,\n      })\n      .then((gasLimit) => {\n        if (!isLoaded) return\n        setTransactionFeeEst(\n          Number(web3.utils.fromWei((gasLimit * gasPrice).toString()))\n        )\n      })\n    return () => {\n      isLoaded = false\n    }\n  }, [from, to, web3, amount, gasPrice])\n\n  const send = () => {\n    console.log('send')\n    if (!web3 || !from || !to || gasPrice === -1) return\n    console.log('send2')\n    web3.eth.sendTransaction({\n      from,\n      to,\n      gasPrice,\n      value: web3.utils.toWei(amount.toString()),\n    })\n  }\n\n  return {\n    send,\n    transactionFeeEstimate: transactionFeeEst,\n  }\n}\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom'\nimport WelcomePage from './WelcomePage'\nimport TestPage from './TestPage'\nimport AddressBookPage from './Contacts/AddressBookPage'\nimport ContactAddPage from './Contacts/ContactAddPage'\nimport ContactEditPage from './Contacts/ContactEditPage'\nimport ContactSendValuePage from './Contacts/ContactSendValuePage'\n\nconst root = process.env.PUBLIC_URL\nexport const routePaths = {\n  welcome: root + '/',\n  test: root + '/test',\n  contacts: {\n    list: root + '/contacts/list',\n    new: root + '/contact/new',\n    send: root + '/contact/send',\n    edit: root + '/contacts/edit',\n  },\n}\n\nconst AppRouter: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={root}>\n          <WelcomePage />\n        </Route>\n        <Route path={routePaths.test}>\n          <TestPage />\n        </Route>\n        <Route exact path={routePaths.contacts.list}>\n          <AddressBookPage />\n        </Route>\n        <Route exact path={routePaths.contacts.new}>\n          <ContactAddPage />\n        </Route>\n        <Route path={routePaths.contacts.send + '/:id'}>\n          <ContactSendValuePage />\n        </Route>\n        <Route path={routePaths.contacts.edit + '/:id'}>\n          <ContactEditPage />\n        </Route>\n        <Route exact path={'*'}>\n          <Redirect to={root} />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default AppRouter\n","import React, { useReducer } from 'react'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { ToastContainer } from 'react-toastify'\nimport { themes } from './styles/theme'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\nimport { useContacts } from './hooks/useContacts'\nimport ErrorNotifications from './components/ErrorNotifications'\nimport AppRouter from './pages/Router'\nimport AppContext from './context/AppContext'\n\nconst AppContextThemeProvider: React.FC = ({ children }) => {\n  return (\n    <AppContext.Consumer>\n      {({ theme }) => {\n        return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n      }}\n    </AppContext.Consumer>\n  )\n}\n\nconst App: React.FC = () => {\n  const [theme, setTheme] = useReducer((_: any, type: string) => {\n    switch (type) {\n      case 'dark':\n        return themes.dark\n      case 'light':\n      default:\n        return themes.light\n    }\n  }, themes.light)\n\n  const contacts = useContacts()\n\n  return (\n    <AppContext.Provider\n      value={{\n        theme: theme,\n        setTheme: (type) => setTheme(type),\n        contactsModule: contacts,\n      }}\n    >\n      <AppContextThemeProvider>\n        <CssBaseline />\n        <ErrorNotifications />\n        <ToastContainer />\n        <AppRouter />\n      </AppContextThemeProvider>\n    </AppContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Web3 from 'web3'\nimport { Web3ReactProvider } from '@web3-react/core'\n\nconst getLibrary = (provider: any, connector: any) => {\n  return new Web3(provider)\n}\n\nReactDOM.render(\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <App />\n  </Web3ReactProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}